// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SqlLiteSample2.Data;
using SqlLiteSample2.Models;
using System;
using System.Collections.Generic;

namespace SqlLiteSample2.Data.Configurations
{
    public partial class OrdersConfiguration : IEntityTypeConfiguration<Orders>
    {
        public void Configure(EntityTypeBuilder<Orders> entity)
        {
            entity.HasKey(e => e.OrderID);

            entity.HasIndex(e => e.CustomerIdentifier, "Orders_IX_Orders_CustomerIdentifier").IsDescending();

            entity.HasIndex(e => e.EmployeeID, "Orders_IX_Orders_EmployeeID").IsDescending();

            entity.HasIndex(e => e.ShipVia, "Orders_IX_Orders_ShipVia").IsDescending();

            entity.Property(e => e.DeliveredDate)
            .UseCollation("NOCASE")
            .HasColumnType("datetime");
            entity.Property(e => e.Freight).HasColumnType("numeric");
            entity.Property(e => e.OrderDate)
            .UseCollation("NOCASE")
            .HasColumnType("datetime");
            entity.Property(e => e.RequiredDate)
            .UseCollation("NOCASE")
            .HasColumnType("datetime");
            entity.Property(e => e.ShipAddress)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(60)");
            entity.Property(e => e.ShipCity)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(15)");
            entity.Property(e => e.ShipCountry)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(15)");
            entity.Property(e => e.ShipPostalCode)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(10)");
            entity.Property(e => e.ShipRegion)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(15)");
            entity.Property(e => e.ShippedDate)
            .UseCollation("NOCASE")
            .HasColumnType("datetime");

            entity.HasOne(d => d.CustomerIdentifierNavigation).WithMany(p => p.Orders).HasForeignKey(d => d.CustomerIdentifier);

            entity.HasOne(d => d.Employee).WithMany(p => p.Orders).HasForeignKey(d => d.EmployeeID);

            entity.HasOne(d => d.ShipViaNavigation).WithMany(p => p.Orders).HasForeignKey(d => d.ShipVia);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Orders> entity);
    }
}
