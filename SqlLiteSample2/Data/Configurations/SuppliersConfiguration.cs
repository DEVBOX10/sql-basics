// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SqlLiteSample2.Data;
using SqlLiteSample2.Models;
using System;
using System.Collections.Generic;

namespace SqlLiteSample2.Data.Configurations
{
    public partial class SuppliersConfiguration : IEntityTypeConfiguration<Suppliers>
    {
        public void Configure(EntityTypeBuilder<Suppliers> entity)
        {
            entity.HasKey(e => e.SupplierID);

            entity.HasIndex(e => e.CountryIdentifier, "Suppliers_IX_Suppliers_CountryIdentifier").IsDescending();

            entity.Property(e => e.City)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(15)");
            entity.Property(e => e.CompanyName)
            .IsRequired()
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(40)");
            entity.Property(e => e.ContactName)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(30)");
            entity.Property(e => e.ContactTitle)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(30)");
            entity.Property(e => e.Fax)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(24)");
            entity.Property(e => e.HomePage)
            .UseCollation("NOCASE")
            .HasColumnType("text(1073741823)");
            entity.Property(e => e.Phone)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(24)");
            entity.Property(e => e.PostalCode)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(10)");
            entity.Property(e => e.Region)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(15)");
            entity.Property(e => e.Street)
            .UseCollation("NOCASE")
            .HasColumnType("nvarchar(60)");

            entity.HasOne(d => d.CountryIdentifierNavigation).WithMany(p => p.Suppliers).HasForeignKey(d => d.CountryIdentifier);

            entity.HasOne(d => d.RegionNavigation).WithMany(p => p.Suppliers)
            .HasForeignKey(d => d.RegionId)
            .OnDelete(DeleteBehavior.ClientSetNull);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Suppliers> entity);
    }
}
